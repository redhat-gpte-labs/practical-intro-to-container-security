---
- name: Configure bastion
  hosts: bastions
  gather_facts: false
  tasks:
    - name: Copy files to the bastion
      copy:
        src: files/gen-ca
        dest: /root
        mode: preserve

    - name: Generate the CA
      command: 
        cmd: /root/gen-ca/gen-ca.sh
        creates: /root/CA/CA_cert.pem
      become: true

    - name: ensure /data dir exists
      file:
        path: /data
        state: directory
        mode: 0755
        owner: root
        group: root
    
    - name: install man pages
      dnf:
        name: man-pages
        state: installed

- name: Add CA to trust store
  hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: Copy CA pubkey to anchor trust
      copy:
        src: /root/CA/CA_cert.pem
        dest: /etc/pki/ca-trust/source/anchors
        mode: 0644
        owner: root
        group: root

    - name: Update CA trust
      command: update-ca-trust
    
    - name: Add Clair environment to profile.d
      copy:
        dest: /etc/profile.d/clair.sh
        content: "export CLAIR_API=http://node2:8080"
        mode: 0644
        owner: root
        group: root

    - name: Download clairctl
      ansible.builtin.get_url:
        url: https://github.com/quay/clair/releases/download/v4.6.0/clairctl-linux-amd64
        dest: /bin/clairctl
        mode: 0755

- name: Configure nodes
  hosts: nodes
  gather_facts: false
  become: true
  tasks:
    - name: Pull registry image
      command: podman pull docker.io/library/registry:2
      register: r_podman_pull
      until: r_podman_pull.rc == 0
      retries: 10
      become: true
      become_user: "{{ student_user }}"

    - name: Copy files to the nodes
      copy:
        src: files/nodes/
        dest: "/home/{{ student_user }}"
        owner: "{{ student_user }}"
        group: "users"
        mode: preserve

    - name: Copy CA to host
      copy:
        src: /root/CA
        dest: "/home/{{ student_user }}/gen-certs"
        owner: "{{ student_user }}"
        group: "users"
        mode: preserve

    - name: Copying configuration files to the nodes from templates
      template:
        src: templates/ssl_cert_cnf_template.j2
        dest: "/home/{{ student_user }}/gen-certs/certificate.cnf"
        owner: "{{ student_user }}"
        group: "users"

- name: Configure clair on node2
  hosts: node2
  gather_facts: false
  become: true
  tasks:
    - name: Create clair directories
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0775
      loop:
        - /clair
        - /clair/config
        - /clair/data

    # - name: Set acl for postgres user running in container
    #   acl:
    #     path: /clair/data
    #     entry: u:26:-wx
    #     state: present

    - name: set acl
      command: setfacl -m u:26:-wx /clair/data

    - name: Copy clair config file
      copy:
        src: files/clair/config.yaml
        dest: /clair/config/config.yaml
        owner: root
        group: root
        mode: 0644

    - name: Copy systemd unit files
      copy:
        src: "files/clair/{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
        owner: root
        group: root
        mode: 0644
      loop:
        - clair-postgres.service
        - clair.service

    - name: Make sure clair services are running
      ansible.builtin.systemd:
        state: started
        enabled: true
        name: "{{ item }}"
      ignore_errors: true
      loop:
        - clair-postgres.service
        - clair.service

- name: Configure registry on node2
  hosts: node2
  gather_facts: false
  become: true
  become_user: lab-user
  tasks:
    - name: set acl
      shell: |
        cd /home/lab-user/gen-certs
        ./gen-cert.sh

        cd /home/lab-user/registry-files
        ./create-registry.sh

        cd /home/lab-user
        mkdir -pv /home/lab-user/.config/systemd/user
        podman generate systemd --new --name registry > /home/lab-user/.config/systemd/user/container-registry.service
        systemctl --user daemon-reload
        systemctl --user start container-registry
        
        loginctl enable-linger
        systemctl --user enable container-registry
